#!/bin/bash
# version 1.0

### Github Issue###
TICKET_PATTERN='GH-[0-9]+'
TICKET_BASE_URL=$(git config --get remote.origin.url | sed 's/....$//' | awk '{print $1"/issues/"}')
NO_TICKET_KEYWORD='NOGH'
EXEMPTION_KEYWORDS='^Merge|^Revert'

### unrelated ###
BRANCH_EXEMPTION_PATTERN='dev|release.*|hotfix.*'

branch=$(git branch | egrep '\*' | sed 's/\* //g')
currentCommitMessage=$(head -n 1 $1)

isExempt=true
isCommitCompliant=true
isBranchNonCompliant=false

commitMergeRevertMatch=$(egrep "$EXEMPTION_KEYWORDS" <<< $currentCommitMessage)
if [[ "$commitMergeRevertMatch" != "" ]]; then
  echo 'Merging or Reverting, will not change commit message.'
  exit 0
fi

exemptionMatch=$(egrep "$BRANCH_EXEMPTION_PATTERN" <<< $branch)
if [[ "$exemptionMatch" = "" ]]; then
    isExempt=false
fi
if $isExempt ; then
    echo 'You just committed to an exempt branch!' $branch
    exit 0
fi
branchNameAfterSlashes=$(echo $branch | awk -F"/" '{print $NF}')
GREP_PATTERN=$TICKET_PATTERN

TICKET_SUFFIX=': '
COMMIT_PATTERN_END='.*'
COMMIT_PATTERN=$TICKET_PATTERN$TICKET_SUFFIX$COMMIT_PATTERN_END
commitComplianceMatch=$(egrep "$COMMIT_PATTERN" <<< $currentCommitMessage)

if [[ "$commitComplianceMatch" = "" ]]; then
    isCommitCompliant=false
fi
branchComplianceMatch=$(egrep "$GREP_PATTERN" <<< $branchNameAfterSlashes)
echo $branchComplianceMatch
if [[ "$branchComplianceMatch" = "" ]]; then
    isBranchNonCompliant=true
fi
if [ "$isBranchNonCompliant" = true ] && [ "$isCommitCompliant" = false ] ; then
    echo 'Cannot find ticket in branch name, assuming NOGH:' $branch
    ticket=$NO_TICKET_KEYWORD
else
    ticket=$(sed -E "s/$GREP_PATTERN_START($TICKET_PATTERN)$GREP_PATTERN_END/\1/g" <<< $branch)
fi

if $isCommitCompliant ; then
    commitTicket=$(sed -E "s/$TICKET_SUFFIX$COMMIT_PATTERN_END//" <<< $currentCommitMessage)
    if [[ "$ticket" != "$commitTicket" ]]; then
        echo "Ticket in commit does not match branch ($commitTicket != $ticket), will not rewrite commit."
        exit 0
    fi
    exit 0
fi

ticketId=$ticket
newMessage="$ticket$TICKET_SUFFIX$currentCommitMessage"
outputTicket=$ticket
if [[ "$ticket" != "$NO_TICKET_KEYWORD" ]]; then
    outputTicket="$ticket: $TICKET_BASE_URL$ticketId"
fi
echo 'Rewriting commit to use ticket ' $outputTicket
sed -i.bak "1s/.*/$newMessage/" $1
exit 0
